name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Test Gradle
    runs-on: ubuntu-latest
    environment: PRD
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Tests
        run: doppler run -- ./gradlew test

  docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: build
    environment: PRD
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Images
        run: |
          doppler run -- docker compose build
          doppler run -- docker compose push

  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: docker
    environment: PRD
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PRD }}
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PEM_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd /home/ubuntu
            
            export DOPPLER_TOKEN=${{ secrets.DOPPLER_TOKEN_PRD }}
            
            if [ -d parrot-server ]; then rm -rf parrot-server; fi
            git clone https://github.com/project-parrot/parrot-server.git
            
            cd parrot-server
            
            doppler secrets download --no-file --format env --project parrot-server --config prd > .env
            
            doppler run -- docker compose pull
            doppler run -- docker compose up -d
            docker image prune -f
            
            cd ..
            rm -rf parrot-server

#      - name: Slack Notification
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: always()